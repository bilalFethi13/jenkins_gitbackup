<?xml version='1.1' encoding='UTF-8'?>
<analysisReport plugin="analysis-model-api@12.1.0">
  <id>-</id>
  <name>-</name>
  <originReportFile>-</originReportFile>
  <subReports>
    <analysisReport>
      <id>checkstyle</id>
      <name>CheckStyle</name>
      <originReportFile>/var/lib/jenkins/workspace/checkstyle_warning/checkstyle-result.xml</originReportFile>
      <subReports/>
      <elements class="linked-hash-set">
        <issue>
          <category>Javadoc</category>
          <type>JavadocPackageCheck</type>
          <severity>ERROR</severity>
          <lineStart>1</lineStart>
          <lineEnd>1</lineEnd>
          <columnStart>0</columnStart>
          <columnEnd>0</columnEnd>
          <lineRanges/>
          <id>4703cf92-d8d4-4914-86de-cc9d66c02d0c</id>
          <reference>6</reference>
          <origin>checkstyle</origin>
          <originName>CheckStyle</originName>
          <moduleName>ant-sample</moduleName>
          <packageName>com.muthu4all.checkstyle</packageName>
          <pathName>/var/lib/jenkins/workspace/checkstyle_warning</pathName>
          <fileName>src/com/muthu4all/checkstyle/Sample.java</fileName>
          <message>Missing package-info.java file.</message>
          <description></description>
          <fingerprint>E9BEBD75F93A7A9BDBA1629D84A4CFF2</fingerprint>
          <partOfModifiedCode>false</partOfModifiedCode>
        </issue>
        <issue>
          <category>Whitespace</category>
          <type>FileTabCharacterCheck</type>
          <severity reference="../../issue/severity"/>
          <lineStart>4</lineStart>
          <lineEnd>4</lineEnd>
          <columnStart>1</columnStart>
          <columnEnd>1</columnEnd>
          <lineRanges/>
          <id>9e1f05e3-0627-48e9-a134-54e54130e88d</id>
          <reference>6</reference>
          <origin>checkstyle</origin>
          <originName>CheckStyle</originName>
          <moduleName>ant-sample</moduleName>
          <packageName reference="../../issue/packageName"/>
          <pathName>/var/lib/jenkins/workspace/checkstyle_warning</pathName>
          <fileName reference="../../issue/fileName"/>
          <message>File contains tab characters (this is the first instance).</message>
          <description></description>
          <fingerprint>362405C86E3A76F60C6A8A55A9D9066B</fingerprint>
          <partOfModifiedCode>false</partOfModifiedCode>
        </issue>
        <issue>
          <category>Javadoc</category>
          <type>JavadocMethodCheck</type>
          <severity reference="../../issue/severity"/>
          <lineStart>7</lineStart>
          <lineEnd>7</lineEnd>
          <columnStart>0</columnStart>
          <columnEnd>0</columnEnd>
          <lineRanges/>
          <id>7a8e0950-d796-44b2-98e7-5236ae2b2ecb</id>
          <reference>6</reference>
          <origin>checkstyle</origin>
          <originName>CheckStyle</originName>
          <moduleName>ant-sample</moduleName>
          <packageName reference="../../issue/packageName"/>
          <pathName>/var/lib/jenkins/workspace/checkstyle_warning</pathName>
          <fileName reference="../../issue/fileName"/>
          <message>Expected @return tag.</message>
          <description></description>
          <fingerprint>B3EFA08627D5310721E4BD95C1158F0D</fingerprint>
          <partOfModifiedCode>false</partOfModifiedCode>
        </issue>
      </elements>
      <infoMessages>
        <string>Searching for all files in &apos;/var/lib/jenkins/workspace/checkstyle_warning&apos; that match the pattern &apos;**/checkstyle-result.xml&apos;</string>
        <string>Traversing of symbolic links: enabled</string>
        <string>-&gt; found 1 file</string>
        <string>Successfully parsed file /var/lib/jenkins/workspace/checkstyle_warning/checkstyle-result.xml</string>
        <string>-&gt; found 3 issues (skipped 0 duplicates)</string>
        <string>Successfully processed file &apos;checkstyle-result.xml&apos;</string>
        <string>Post processing issues on &apos;Master&apos; with source code encoding &apos;UTF-8&apos;</string>
        <string>Creating SCM blamer to obtain author and commit information for affected files</string>
        <string>-&gt; No blamer installed yet. You need to install the &apos;git-forensics&apos; plugin to enable blaming for Git.</string>
        <string>Resolving file names for all issues in workspace &apos;/var/lib/jenkins/workspace/checkstyle_warning&apos;</string>
        <string>-&gt; resolved paths in source directory (1 found, 0 not found)</string>
        <string>Resolving module names from module definitions (build.xml, pom.xml, or Manifest.mf files)</string>
        <string>-&gt; resolved module names for 3 issues</string>
        <string>Resolving package names (or namespaces) by parsing the affected files</string>
        <string>-&gt; resolved package names of 1 affected files</string>
        <string>No filter has been set, publishing all 3 issues</string>
        <string>Creating fingerprints for all affected code blocks to track issues over different builds</string>
        <string>-&gt; created fingerprints for 3 issues (skipped 0 issues)</string>
      </infoMessages>
      <errorMessages/>
      <countersByKey/>
      <duplicatesSize>0</duplicatesSize>
    </analysisReport>
  </subReports>
  <elements class="linked-hash-set"/>
  <infoMessages>
    <string>Searching for all files in &apos;/var/lib/jenkins/workspace/checkstyle_warning&apos; that match the pattern &apos;**/checkstyle-result.xml&apos;</string>
    <string>Traversing of symbolic links: enabled</string>
    <string>-&gt; found 1 file</string>
    <string>Successfully parsed file /var/lib/jenkins/workspace/checkstyle_warning/checkstyle-result.xml</string>
    <string>-&gt; found 3 issues (skipped 0 duplicates)</string>
    <string>Successfully processed file &apos;checkstyle-result.xml&apos;</string>
    <string>Post processing issues on &apos;Master&apos; with source code encoding &apos;UTF-8&apos;</string>
    <string>Creating SCM blamer to obtain author and commit information for affected files</string>
    <string>-&gt; No blamer installed yet. You need to install the &apos;git-forensics&apos; plugin to enable blaming for Git.</string>
    <string>Resolving file names for all issues in workspace &apos;/var/lib/jenkins/workspace/checkstyle_warning&apos;</string>
    <string>-&gt; resolved paths in source directory (1 found, 0 not found)</string>
    <string>Resolving module names from module definitions (build.xml, pom.xml, or Manifest.mf files)</string>
    <string>-&gt; resolved module names for 3 issues</string>
    <string>Resolving package names (or namespaces) by parsing the affected files</string>
    <string>-&gt; resolved package names of 1 affected files</string>
    <string>No filter has been set, publishing all 3 issues</string>
    <string>Creating fingerprints for all affected code blocks to track issues over different builds</string>
    <string>-&gt; created fingerprints for 3 issues (skipped 0 issues)</string>
    <string>Copying affected files to Jenkins&apos; build folder &apos;/var/lib/jenkins/jobs/checkstyle_warning/builds/6/files-with-issues&apos;</string>
    <string>-&gt; 1 copied, 0 not in workspace, 0 not-found, 0 with I/O error</string>
    <string>Repository miner is not configured, skipping repository mining</string>
    <string>Reference build recorder is not configured</string>
    <string>No valid reference build found</string>
    <string>All reported issues will be considered outstanding</string>
    <string>No quality gates have been set - skipping</string>
    <string>Health report is disabled - skipping</string>
    <string>Created analysis result for 3 issues (found 0 new issues, fixed 0 issues)</string>
    <string>Attaching ResultAction with ID &apos;checkstyle&apos; to build &apos;checkstyle_warning #6&apos;.</string>
  </infoMessages>
  <errorMessages/>
  <countersByKey/>
  <duplicatesSize>0</duplicatesSize>
</analysisReport>